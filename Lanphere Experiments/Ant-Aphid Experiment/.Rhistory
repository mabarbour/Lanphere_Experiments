names.Pure.cannibals <- dimnames(web)[[1]][i]
number.Pure.cannibals <- 1
}
else{
names.Pure.cannibals <- c(names.Pure.cannibals, dimnames(web)[[1]][i])
number.Pure.cannibals <- number.Pure.cannibals + 1
}
}
names.Intermediate <- dimnames(web)[[1]][is.na(match(dimnames(web)[[1]],
c(names.Bottom, names.Top, names.Unconnected, names.Pure.cannibals)))]
number.Intermediate <- length(web[1,])-number.Bottom-number.Top-number.Unconnected-number.Pure.cannibals
if(proportion)
result <- list(Bottom=names.Bottom,
Intermediate=names.Intermediate,
Top=names.Top,
Unconnected=names.Unconnected,
Pure.cannibals=names.Pure.cannibals,
Proportions.of.each=c(number.Bottom, number.Intermediate, number.Top, number.Unconnected, number.Pure.cannibals)/length(web[1,]))
if(!proportion)
result <- list(Bottom=names.Bottom,
Intermediate=names.Intermediate,
Top=names.Top,
Unconnected=names.Unconnected,
Pure.cannibals=names.Pure.cannibals,
Proportions.of.each=c(number.Bottom, number.Intermediate, number.Top, number.Unconnected, number.Pure.cannibals))
result
}
Num.herbivores <- function(web) {
S <- length(web[,1])
## Find the rows/columns with basal species
B.rows <-  c(1:S)[apply(web, 2, sum)==0 & apply(web, 1, sum)!=0]
## Find r/c wth species that only eat basal
if(length(B.rows)==0)
Nh <- NA
if(length(B.rows)>0) {
if( length(B.rows)>1 & (S-length(B.rows))>1 )
Nh <- sum( apply(web[B.rows,], 2, function(x) sum(x!=0)>0) &
apply(web[-B.rows,], 2, function(x) sum(x!=0)==0) )
if( length(B.rows)==1 & (S-length(B.rows))>1 )
Nh <- sum( web[B.rows,]!=0  &
apply(web[-B.rows,], 2, function(x) sum(x!=0)==0) )
if( length(B.rows)>1 & (S-length(B.rows))==1 )
Nh <- sum( apply(web[B.rows,], 2, function(x) sum(x!=0)>0) &
web[-B.rows,]==0)
}
Nh
}
Cannibals <- function(web)
length(dimnames(web)[[1]][diag(web)==1]) / length(web[1,])
Gen.sd <- function(web)
sd(colSums(web)/sum(web))
Vul.sd <- function(web)
sd(rowSums(web)/sum(web))
Maxsim <- function(web){
sims <- matrix(0, length(web[,1]), length(web[,1]))
for(i in 1:length(web[,1]))
for(j in 1:length(web[,1]))
sims[i,j] <- T.sim.ij(web, i, j)
diag(sims) <- NA
mean(apply(sims, 1, function(x) max(x[!is.na(x)])))
}
## used by Maxsim
T.sim.ij <- function(web, i, j){
same <- sum(web[i,] & web[j,]) + sum(web[,i] & web[,j])
total <- sum(web[i,] | web[j,]) + sum(web[,i] | web[,j])
same / total
}
GetTL <- function(web){
## takes predation matrix with consumers in columns
## identify the columns with basal species
tweb <- t(web)
## make the rows add to one
rs <- rowSums(tweb)
for(i in 1:length(tweb[,1]))
tweb[i,tweb[i,]==1] = 1/rs[i]
nb.TL <- try(solve(diag(length(tweb[,1])) - tweb), T)
if(class(nb.TL)=="try-error")
nbTL <- rep(NA, length(tweb[,1]))
if(class(nb.TL)!="try-error")
nbTL <- rowSums(nb.TL)
nbTL
}
## takes a food web in matrix format and coverts it to list format
Matrix.to.list <- function(web.matrix, predator.first=TRUE){
if(length(dimnames(web.matrix)[[1]])==length(web.matrix[1,]))
species.names <- dimnames(web.matrix)[[1]]
else
species.names <- 1:length(web.matrix[,1])
web.list <- matrix(0, sum(web.matrix), 2)
counter <- 1
for(i in 1:length(web.matrix[,1]))
for(j in 1:length(web.matrix[,1]))
if(web.matrix[i,j]==1){
web.list[counter,] <- c(species.names[i],species.names[j])
counter <- counter + 1
}
if(!predator.first)
web.list <- cbind(web.list[,2], web.list[,1])
web.list
}
## make some random, cascade, and niche food webs
S = 40     ## set species richness
C = 0.1    ## set connectance
N = 1000     ## set the number of replicate webs to make
L = S^2*C  ## calculate number of links from S and C
random.webs <- Random.model(S, L, N)
cascade.webs <- Cascade.model(S, L, N)
niche.webs <- Niche.model(S, L, N)
## plot the webs
par(mar=c(2,2,2,2))
layout(matrix(1:4, 2, 2), respect=T)
for(i in 1:4){
Plot.matrix(random.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(cascade.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(niche.webs[[i]])
box()
}
## get the structural properties
random.structure <- Get.web.stats(random.webs)
cascade.structure <- Get.web.stats(cascade.webs)
random.webs
## plot the webs
par(mar=c(2,2,2,2))
layout(matrix(1:4, 2, 2), respect=T)
for(i in 1:4){
Plot.matrix(random.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(cascade.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(niche.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(random.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(cascade.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(niche.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(cascade.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(niche.webs[[i]])
box()
}
cascade.structure <- Get.web.stats(cascade.webs)
## make some random, cascade, and niche food webs
S = 40     ## set species richness
C = 0.1    ## set connectance
N = 1000     ## set the number of replicate webs to make
L = S^2*C  ## calculate number of links from S and C
random.webs <- Random.model(S, L, N)
cascade.webs <- Cascade.model(S, L, N)
niche.webs <- Niche.model(S, L, N)
## plot the webs
par(mar=c(2,2,2,2))
layout(matrix(1:4, 2, 2), respect=T)
for(i in 1:4){
Plot.matrix(random.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(cascade.webs[[i]])
box()
}
for(i in 1:4){
Plot.matrix(niche.webs[[i]])
box()
}
## get the structural properties
random.structure <- Get.web.stats(random.webs)
cascade.structure <- Get.web.stats(cascade.webs)
niche.structure <- Get.web.stats(niche.webs)
## some histograms of diet similarity, for example
par(mar=c(5,4,4,2))
prop <- "Maxsim"
prop.range <- range(c(random.structure[,prop],
cascade.structure[,prop],
niche.structure[,prop]))
prop.bins <- seq(prop.range[1], prop.range[2], length=10)
layout(matrix(1:3, 3, 1), respect=T)
hist(random.structure[,prop], main="Random", xlab=prop, breaks=prop.bins)
hist(cascade.structure[,prop], main="Cascade", xlab=prop, breaks=prop.bins)
hist(niche.structure[,prop], main="Niche", xlab=prop, breaks=prop.bins)
## Big differences between models!
Aki <- 1.6
Nki <- 1.0
Hki <- 0.5
Fki <- Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
curve(Fki)
Fki <- function(Aki,Nki,Hki) {
Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
}
curve(Fki)
Nki <- 1.0
Fki <- function(Aki,Nki,Hki) {
Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
}
curve(Fki)
Fki <- function(Aki,Nki,Hki) {
(Aki*Nki)/(1 + Aki*Hki*Nki) # type 2 functional response
}
curve(Fki)
Aki <- 1.6
Nki <- seq(0,2,0.1)
Hki <- 0.5
Fki <- function(Aki,Nki,Hki) {
Fki <- function(Aki,Nki,Hki) {
Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
}
curve(Fki)
Fki <- function(Aki,Nki,Hki) {
Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
}
curve(Fki)
Fki <- expression(Aki*Nki/(1 + Aki*Hki*Nki) # type 2 functional response
Fki <- expression(Aki*Nki/(1 + Aki*Hki*Nki)) # type 2 functional response
curve(Fki)
Fki <- function(Aki,Nki,Hki){
type2 <- Aki*Nki/(1 + Aki*Hki*Nki)# type 2 functional response
}
curve(Fki)
Aki <- 1.6
N <- seq(0,2,0.1)
Hki <- 0.5
Fki <- function(Aki,Nki,Hki){
type2 <- Aki*N/(1 + Aki*Hki*Nki)# type 2 functional response
}
curve(Fki)
Aki <- 1.6
N <- seq(0,2,0.1)
H <- 0.5
Fki <- function(Aki,Nki,Hki){
type2 <- Aki*N/(1 + Aki*Hki*Nki)# type 2 functional response
}
curve(Fki)
Aki <- 1.6
N <- seq(0,2,0.1)
H <- 0.5
Fki <- function(Aki,H){
Aki*N/(1 + Aki*H*N)# type 2 functional response
}
curve(Fki)
Fki <- function(Aki,H){
Aki*N/(1 + Aki*H*N)# type 2 functional response
}
Fki
Fki(1.6,0.5)
windOther <- merge(WindLeafTiesOthers,WindData,by="Collection.Number")
WindLeafTiesOthers <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Arthropod Dissections/Leaf Ties - Wind Experiment 2012.csv")
# set working directory
setwd("~/Desktop/Lanphere Experiments/Wind Experiment")
# load libraries
library("lattice")
library("lme4")
library("nlme")
library("reshape2")
# load data
WindData <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Visual Arthropod Surveys & Plant Architecture Data/Wind Plant Trait and Arthropod data.csv")
Wind.leaf.trait.data <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Plant Traits/Wind leaf trait data.csv")
trichomes <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Plant Traits/Trichome Density - Wind Experiment 2012.csv")
DryLeafWt <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Plant Traits/Leaf Weights - Dry - Wind Experiment 2012.csv")
WindLeafMine <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Arthropod Dissections/Leaf Miner Dissections - Wind Experiment 2012.csv", stringsAsFactors=F)
WindLeafTiesOthers <- read.csv("~/Desktop/Lanphere Experiments/Wind Experiment/Arthropod Dissections/Leaf Ties - Wind Experiment 2012.csv")
### manage data
# manage wind data
WindData$Wind.Exposure <- factor(x = WindData$Wind.Exposure, levels = c("Exposed","Unexposed"), labels = c("e","u"))
WindData$Collection.Number <- with(WindData, paste(Wind.Exposure,Block,sep=""))
WindData$Collection.Number <- with(WindData, paste(Collection.Number,Plant.Position,sep="."))
WindLeafMine$Collection.Number <- with(WindLeafMine, paste(Treatment,Block,sep=""))
WindLeafMine$Collection.Number <- with(WindLeafMine, paste(Collection.Number,Plant, sep="."))
WindLeafTiesOthers$Collection.Number <- with(WindLeafTiesOthers, paste(Treatment,Block,sep=""))
WindLeafTiesOthers$Collection.Number <- with(WindLeafTiesOthers, paste(Collection.Number,Plant, sep="."))
# merge and manage data sets
wind <- merge(WindData,Wind.leaf.trait.data,by.x="Collection.Number",by.y="Collection.Number")
wind <- merge(wind,trichomes,by.x="Collection.Number", by.y="Collection.No.")
wind <- merge(wind,DryLeafWt, by.x="Collection.Number", by.y="Collection.No.")
#wind <- merge(wind,WindLeafMine, by.x="Collection.Number", by.y="Collection.Number") # noticed that I lost data Leaf miner data when I merged these data set
wind$LDMC <- with(wind, Dry.Leaf.Wt/Wet.Leaf.Weight)
wind$WC <- with(wind, (Wet.Leaf.Weight-Dry.Leaf.Wt)/Dry.Leaf.Wt)
# manage leaf mine parasitism data
windLM <- merge(WindLeafMine, WindData, by="Collection.Number")
empty <- grep("empty", windLM$Leaf.Tip.Fold)
windLM$Leaf.Tip.Fold <- replace(windLM$Leaf.Tip.Fold, empty,"LTFlarv") # changed all entries with "empty" to "LTFlarv" to indicate they survived.
sp.329 <- grep("329", windLM$Leaf.Tip.Fold)
windLM$Leaf.Tip.Fold <- replace(windLM$Leaf.Tip.Fold, sp.329, "sp.329") # changed all entries with "329" to "sp.329" to indicate they were parasitized by sp. 329.
windLM$LTF.survive <- with(windLM, ifelse(Leaf.Tip.Fold == "LTFlarv", 1,0))
windLM$sp329.attack <- with(windLM, ifelse(Leaf.Tip.Fold == "sp.329",1,0))
# manage leaf tie and other parasitism data
windOther <- merge(WindLeafTiesOthers,WindData,by="Collection.Number")
windOther$live319 <- with(windOther, ifelse(Contents == "living 319", 1,0))
agg319 <- aggregate(live319~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg319, interaction.plot(Treatment,Genotype,live319))
glm.319 <- glm(live319~Genotype*as.factor(Treatment),family="poisson",agg319)
summary(glm.319)
anova(glm.319, test="Chisq")
windOther$live320 <- with(windOther, ifelse(Contents == "living 320", 1,0))
agg320 <- aggregate(live320~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg320, interaction.plot(Treatment,Genotype,live320))
glm.320 <- glm(live320~Genotype*as.factor(Treatment),family="poisson",agg320)
summary(glm.320)
anova(glm.320, test="Chisq")
windOther$live321 <- with(windOther, ifelse(Contents == "living 321", 1,0))
agg321 <- aggregate(live321~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg321, interaction.plot(Treatment,Genotype,live321))
glm.321 <- glm(live321~Genotype*as.factor(Treatment),family="poisson",agg321)
summary(glm.321)
anova(glm.321, test="Chisq")
windOther$live322 <- with(windOther, ifelse(Contents == "living 322", 1,0))
windOther$live322 <- with(windOther, ifelse(Contents == "living 322", 1,0))
agg322 <- aggregate(live322~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg321, interaction.plot(Treatment,Genotype,live322))
glm.322 <- glm(live322~Genotype*as.factor(Treatment),family="poisson",agg322)
summary(glm.322)
anova(glm.322, test="Chisq")
agg322 <- aggregate(live322~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg321, interaction.plot(Treatment,Genotype,live322))
glm.322 <- glm(live322~Genotype*as.factor(Treatment),family="poisson",agg322)
summary(glm.322)
anova(glm.322, test="Chisq") # no effect for sp. 322
with(agg321, interaction.plot(Treatment,Genotype,live322))
windOther$live322 <- with(windOther, ifelse(Contents == "living 322", 1,0))
agg322 <- aggregate(live322~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg321, interaction.plot(Treatment,Genotype,live322))
glm.322 <- glm(live322~Genotype*as.factor(Treatment),family="poisson",agg322)
summary(glm.322)
anova(glm.322, test="Chisq") # no effect for sp. 322
with(agg321, interaction.plot(Treatment,Genotype,live322))
agg322 <- aggregate(live322~Collection.Number+Genotype+Treatment,FUN=sum,windOther)
with(agg321, interaction.plot(Treatment,Genotype,live322))
windOther$live322 <- with(windOther, ifelse(Contents == "living 322", 1,0))
windOther$live322
with(agg321, interaction.plot(Treatment,Genotype,live322))
glm.322 <- glm(live322~Genotype*as.factor(Treatment),family="poisson",agg322)
summary(glm.322)
anova(glm.322, test="Chisq") # no effect for sp. 322
with(agg322, interaction.plot(Treatment,Genotype,live322)) # don't unde
setwd("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment")
library("lattice")
library("lme4")
trich <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Trichome Density - Ant-Aphid Experiment 2012.csv")
View(trich)
DryLeafWt <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Leaf Weights - Dry - Ant-Aphid Experiment 2012.csv")
View(DryLeafWt)
WetLeafWt <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Ant-aphid Plant Trait Data.csv")
View(WetLeafWt)
setup <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Ant-Aphid_Experiment_Setup.csv")
View(setup)
head(trich)
setup$Collection.No. <- with(setup, paste(Block,Plant.Position, sep="."))
aaTrait <- merge(setup, trich, by="Collection.No.")
aaTrait <- merge(aaTrait, DryLeafWt, by="Collection.No.")
aaTrait <- merge(aaTrait, WetLeafWt, by = "Collection.No.")
head(WetLeafWt)
aaTrait <- merge(aaTrait, WetLeafWt, by.x = "Collection.No.", by.y="Collection.Number")
head(trich)
head(DryLeafWt)
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distance.to.Ant.Mound, Plant.Position, Collection.No., Wet.Leaf.Weight, Percent.Browned, Trichome.Density, Dry.Leaf.Weight))
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distant.to.Ant.Mound, Plant.Position, Collection.No., Wet.Leaf.Weight, Percent.Browned, Trichome.Density, Dry.Leaf.Weight))
aaTrait <- merge(setup, trich, by="Collection.No.")
aaTrait <- merge(aaTrait, DryLeafWt, by="Collection.No.")
aaTrait <- merge(aaTrait, WetLeafWt, by.x = "Collection.No.", by.y="Collection.Number")
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distant.to.Ant.Mound, Plant.Position, Collection.No., Wet.Leaf.Weight, Percent.Browned, Trichome.Density, Dry.Leaf.Weight))
head(aaTrait)
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distant.to.Ant.Mound, Plant.Position, Collection.No., Wet.Leaf.Weight, Percent.Browned, Trichome.Density.x, Dry.Leaf.Weight.x))
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distant.to.Ant.Mound, Plant.Position, Collection.No., Aphids.or.No.Aphids, Wet.Leaf.Weight, Percent.Browned, Trichome.Density.x, Dry.Leaf.Weight.x))
setwd("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment")
## load libraries
library("lattice")
library("lme4")
### upload data
# experimental design setup
setup <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Ant-Aphid_Experiment_Setup.csv")
# arthropod data. NEED TO DOUBLE CHECK!!!
raw <- read.csv("~/Desktop/WillowProject/Ant-Aphid Experiment/Ant-Aphid_Data_v2.csv", stringsAsFactors=F)
# plant trait data
trich <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Trichome Density - Ant-Aphid Experiment 2012.csv")
DryLeafWt <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Leaf Weights - Dry - Ant-Aphid Experiment 2012.csv")
WetLeafWt <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Plant Traits/Ant-aphid Plant Trait Data.csv") # also has percent browning, but I don't know how informative it will be since we didn't take leaves from plants that had leaves that were substantially browned.
# merge and manage plant trait data
setup$Collection.No. <- with(setup, paste(Block,Plant.Position, sep="."))
aaTrait <- merge(setup, trich, by="Collection.No.")
aaTrait <- merge(aaTrait, DryLeafWt, by="Collection.No.")
aaTrait <- merge(aaTrait, WetLeafWt, by.x = "Collection.No.", by.y="Collection.Number")
aaTrait <- subset(aaTrait, select = c(Genotype, Block, Distant.to.Ant.Mound, Plant.Position, Collection.No., Aphids.or.No.Aphids, Wet.Leaf.Weight, Percent.Browned, Trichome.Density.x, Dry.Leaf.Weight.x))
aaTrait$LDMC <- with(aaTrait, Dry.Leaf.Weight.x/Wet.Leaf.Weight)
aaTrait$WC <- with(aaTrait, (Wet.Leaf.Weight-Dry.Leaf.Weight.x)/Dry.Leaf.Weight.x)
with(aaTrait,interaction.plot(Distant.to.Ant.Mound,Genotype,LDMC))
with(aaTrait, interaction.plot(Distant.to.Ant.Mound,Aphids.or.No.Aphids,LDMC)))
with(aaTrait, interaction.plot(Distant.to.Ant.Mound,Aphids.or.No.Aphids,LDMC))
with(aaTrait, interaction.plot(Aphids.or.No.Aphids,Genotype,LDMC))
LDMC.glm <- glm(LDMC~Genotype*Distant.to.Ant.Mound*Aphids.or.No.Aphids,aaTrait,family="gaussian")
summary(LDMC.glm)
anova(LDMC.glm,test="F") # appears to be a marginal main effect of genotype and wind exposure
LDMC.glm <- glm(LDMC~Genotype+Distant.to.Ant.Mound+Aphids.or.No.Aphids,aaTrait,family="gaussian")
summary(LDMC.glm)
anova(LDMC.glm,test="F") # appears to be a marginal main effect of genotype and wind exposure
LDMC.glm <- glm(LDMC~Genotype*Distant.to.Ant.Mound*Aphids.or.No.Aphids,aaTrait,family="gaussian")
summary(LDMC.glm)
anova(LDMC.glm,test="F") # appears to be a marginal main effect of genotype and wind exposure
anova(LDMC.glm,test="F") # appears to be a marginal main effect of genotype and wind exposure
WC.glm <- glm(WC <- Genotype*Distant.to.Ant.Mound*Aphids.or.No.Aphids,aaTrait,family="gaussian")
WC.glm <- glm(WC~Genotype*Distant.to.Ant.Mound*Aphids.or.No.Aphids,aaTrait,family="gaussian")
summary(WC.glm)
anova(WC.glm,test="F")
summary(WC.glm)
anova(WC.glm,test="F")
tri.glm <- glm(Trichome.Density.x~Genotype*Distant.to.Ant.Mound*Aphids.or.No.Aphids,aaTrait,family="poisson")
summary(tri.glm)
anova(tri.glm,test="F")
anova(tri.glm,test="Chisq")
tri.glm <- glm(Trichome.Density.x~Genotype+Distant.to.Ant.Mound+Aphids.or.No.Aphids,aaTrait,family="poisson")
summary(tri.glm)
anova(tri.glm,test="Chisq") # wow...apparently there is ANOTHER significant 3-way interaction.  This seems a bit fishy to me...
xyplot(LDMC~Distant.to.Ant.Mound+Aphids.or.No.Aphids, group = Genotype, aaTrait)
bwplot(LDMC~Distant.to.Ant.Mound+Aphids.or.No.Aphids, group = Genotype, aaTrait)
xyplot(LDMC~Distant.to.Ant.Mound+Aphids.or.No.Aphids, group = Genotype, aaTrait)
xyplot(WC~Distant.to.Ant.Mound+Aphids.or.No.Aphids,group=Genotype,aaTrait)
xyplot(Trichome.Density~Distant.to.Ant.Mound+Aphids.or.No.Aphids,group=Genotype,aaTrait)
xyplot(Trichome.Density.x~Distant.to.Ant.Mound+Aphids.or.No.Aphids,group=Genotype,aaTrait)
xyplot(WC~Distant.to.Ant.Mound+Aphids.or.No.Aphids,group=Genotype,aaTrait, type ="l")
xyplot(LDMC~Distant.to.Ant.Mound+Aphids.or.No.Aphids, group = Genotype, aaTrait, type="l")
xyplot(Trichome.Density.x~Distant.to.Ant.Mound+Aphids.or.No.Aphids,group=Genotype,aaTrait, type = "l")
install.packages("NetIndices")
library("NetIndices")
LTFdata <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Arthropod Dissections/Leaf Miner Dissections - Ant-Aphid Experiment 2012.csv")
View(LTFdata)
LTFdata$Collection.No. <- with(LTFdata, paste(Block,Plant, sep="."))
aaLTF <- merge(setup, LTFdata, by="Collection.No.")
emptyLTF <- grep("empty", aaLTF$Leaf.Tip.Fold)
emptyLTF
aaLTF$Leaf.Tip.Fold <- replace(aaLTF$Leaf.Tip.Fold, emptyLTF,"LTFlarv") # changed all entries with "empty" to "LTFlarv" to indicate they survived.
LTFdata <- read.csv("~/Desktop/Lanphere Experiments/Ant-Aphid Experiment/Arthropod Dissections/Leaf Miner Dissections - Ant-Aphid Experiment 2012.csv", stringsAsFactors=F)
LTFdata$Collection.No. <- with(LTFdata, paste(Block,Plant, sep="."))
aaLTF <- merge(setup, LTFdata, by="Collection.No.")
emptyLTF <- grep("empty", aaLTF$Leaf.Tip.Fold)
aaLTF$Leaf.Tip.Fold <- replace(aaLTF$Leaf.Tip.Fold, emptyLTF,"LTFlarv") # changed all entries with "empty" to "LTFlarv" to indicate they survived.
aaLTF$LTFsurvive <- with(aaLTF, ifelse(aaLTF$Leaf.Tip.Fold == "LTFlarv", 1, 0))
xyplot(LTFsurvive~Genotype*Aphids.or.No.Aphids,type="l",aaLTF)
xyplot(LTFsurvive~Genotype+Aphids.or.No.Aphids,type="l",aaLTF)
xyplot(LTFsurvive~Genotype+Aphids.or.No.Aphids,aaLTF)
xyplot(LTFsurvive~Aphids.or.No.Aphids, group = Genotype,aaLTF)
with(aaLTF, interaction.plot(Distant.to.Ant.Mound, Genotype,LTFsurvive))
aggLTF <- aggregate(LTFsurvive~Collection.No.+Genotype+Distant.to.Ant.Mound+Aphids.or.No.Aphids, FUN=sum,aaLTF)
aaLTF.glm <- glm(LTFsurvive~Genotype+Aphids.or.No.Aphids,family="poisson",aggLTF)
summary(aaLTF.glm)
anova(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
aaLTF.glm <- glm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,family="poisson",aggLTF)
summary(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
aaLTF.glm <- glm(LTFsurvive~Genotype*Aphids.or.No.Aphids*Distant.to.Ant.Mound,family="poisson",aggLTF)
summary(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
aaLTF.glm <- glm(LTFsurvive~Genotype*Aphids.or.No.Aphids + Genotype*Distant.to.Ant.Mound +Aphids.or.No.Aphids*Distant.to.Ant.Mound,family="poisson",aggLTF)
aaLTF.glm <- glm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,family="poisson",aggLTF) # if I try to include interactions, then I receive the warning "fitted rates numerically 0 occurred".
summary(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
lm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,aggLTF)
summary(lm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,aggLTF))
head(setup)
setup$Zeroes <- seq(0,0,0)
head(setup)
intersect(setup,aggLTF)
union(setup,aggLTF)
rbind.data.frame(setup,aggLTF)
aggLTF <- merge(setup,aggLTF,all.x)
aggLTF <- merge(setup,aggLTF,all.x=T)
aggLTF
aggLTF$test <- with(aggLTF, LTFsurvive+Zeroes)
aggLTF
replace(LTFsurvive,list="NA",0)
replace(aggLTF$LTFsurvive,list="NA",0)
na <- NA
replace(aggLTF$LTFsurvive,na,0)
na <- grep("NA", aggLTF$LTFsurvive)
replace(aggLTF$LTFsurvive,na,0)
replace(aggLTF$LTFsurvive,na,0)
na
aggLTF$LTFsurvive
test <- grep("NA", aggLTF$LTFsurvive)
test
aggLTF$LTFsurvive[is.na(aggLTF$LTFsurvive)] <- 0
aggLTF$LTFsurvive
aaLTF.glm <- glm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,family="poisson",aggLTF) # if I try to include interactions, then I receive the warning "fitted rates numerically 0 occurred".
summary(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
aaLTF.glm <- glm(LTFsurvive~Genotype*Aphids.or.No.Aphids*Distant.to.Ant.Mound,family="poisson",aggLTF) # if I try to include interactions, then I receive the warning "fitted rates numerically 0 occurred".
aaLTF.glm <- glm(LTFsurvive~Genotype+Aphids.or.No.Aphids+Distant.to.Ant.Mound,family="poisson",aggLTF) # if I try to include interactions, then I receive the warning "fitted rates numerically 0 occurred".
summary(aaLTF.glm)
anova(aaLTF.glm,test="Chisq")
with(aggLTF, table(Genotype,LTFsurvive) )
with(aggLTF, table(Distant.to.Ant.Mound,LTFsurvive))
with(aggLTF, table(Distant.to.Ant.Mound,Aphids.or.No.Aphids))
with(aggLTF, table(Aphids.or.No.Aphids,LTFsurvive))
